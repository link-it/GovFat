<?xml version="1.0" encoding="iso-8859-1"?>

<project name="fatturaPA" default="build" basedir=".">

	<description>
        	Ambiente di compilazione del Progetto fatturaPA
	</description>

	<import file="./local_env.xml" />

	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${required_lib_fatturaPA}/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>
	
	<!-- Check JAVA VERSIONE -->
    <property environment="env"/>
    <var name="java_home" value="${env.JAVA_HOME}"/>
    <!--
    <echo message="Java home: ${java_home}"/>
    <echo message="Java version: ${ant.java.version}"/>
    -->
    <if>
          <equals arg1="${java_home}" arg2="$${env.JAVA_HOME}"/>
          <then>
               <fail message="JAVA_HOME non impostata"/>
          </then>
    </if>
    <if>
         <or>
             <equals arg1="${ant.java.version}" arg2="1.3" />
             <equals arg1="${ant.java.version}" arg2="1.4" />
             <equals arg1="${ant.java.version}" arg2="1.5" />
         </or>
         <then>
              <fail message="OpenSPCoop2 richiede java 6 o superiore"/>
         </then>
    </if>
    
    
	<!--  
		Java 7 introduced a stricter verification and changed the class format a bit 
		to contain a stack map, used to verify that code is correct. 
		The exception can you see (java.lang.VerifyError: Expecting a stackmap frame at branch target XX in), 
		means that some method doesn't have a valid stack map.

		Java version or bytecode instrumentation could both be to blame. 
		Usually this means that a library that the application uses, generates invalid bytecode that doesn't pass the stricter verification. 
		So nothing else than reporting it as a bug to the library can be done by the developer.

		As a workaround you can add in java app
		-noverify, to disable verification, 
		or -XX:-UseSplitVerifier,to go back to the previous behavior, to the JVM arguments.
		
		Otherwise compile in 1.6 mode
	-->
	<var name="classSourceVersion" value="1.6"/>
	<var name="classTargetVersion" value="1.6"/>
	<if>
		<not>
			<equals arg1="${ant.java.version}" arg2="1.6" />
		</not>
		<then>
			<echo message="WARN: enable 1.6 compatibility (workaround for java 7 stricter verification)" />
		</then>
	</if>
    
	

	<property name="src_dir_fatturaPA" location="src" />
	<property name="src_fatturaPA" location="${src_dir_fatturaPA}/org/govmix/proxy/fatturapa" />
	<property name="build_dir_fatturaPA" location="build" />
	<property name="build_fatturaPA" location="${build_dir_fatturaPA}/api" />
	<property name="dist_fatturaPA" location="dist" />
	
	<target name="clean">
		<delete dir="${build_dir_fatturaPA}" />
		<delete dir="${dist_fatturaPA}" />
	</target>

	<target name="init_compile_fatturaPA">
		<mkdir dir="${build_fatturaPA}" />
		<mkdir dir="${dist_fatturaPA}" />
	</target>


	<target name="build_fatturaPA" depends="init_compile_fatturaPA" description="compila la libreria">

		<javac destdir="${build_fatturaPA}" 
				debug="${debug_fatturaPA}"
				source="${classSourceVersion}" target="${classTargetVersion}">
			<compilerarg value="-Xlint:unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
			<src path="${src_fatturaPA}" />
			<classpath>
				<fileset dir="${required_lib_fatturaPA}" >
					<exclude name="**/jars_version.info"/>
				</fileset>
			</classpath>
		</javac>

		<!-- Creazione del Binding JIBX -->
		<echo message="Jibx binding [org.govmix.proxy.fatturapa] ..."/>
		<mkdir dir="org/govmix/proxy/fatturapa" />
		<copy file="${src_fatturaPA}/binding.xml" todir="org/govmix/proxy/fatturapa" />
		<move todir="org/govmix/proxy/fatturapa">
			<fileset dir="${build_fatturaPA}/org/govmix/proxy/fatturapa">
				<include name="**/*.class" />
			</fileset>
		</move>
		<java classname="org.jibx.binding.Compile" fork="true">
			<arg value="org/govmix/proxy/fatturapa/binding.xml" />
			<classpath>
				<fileset dir="${required_lib_fatturaPA}" >
					<exclude name="**/jars_version.info"/>
				</fileset>
			</classpath>
		</java>
		<move todir="${build_fatturaPA}/org/govmix/proxy/fatturapa">
			<fileset dir="org/govmix/proxy/fatturapa">
				<include name="**/*.*" />
			</fileset>
		</move>
		<delete dir="org" />
		<available file="${build_fatturaPA}/org/govmix/proxy/fatturapa/JiBX_bindingFactory.class" property="jibx.binding.fatturaPA.class"/>
		<available file="${build_fatturaPA}/org/govmix/proxy/fatturapa/binding.xml" property="jibx.binding.fatturaPA.xml"/>
		<if>
			<and>
				<istrue value="${jibx.binding.fatturaPA.class}"/>
				<istrue value="${jibx.binding.fatturaPA.xml}"/>
			</and>
			<then>
				<echo message="Jibx binding [org.govmix.proxy.fatturapa] ok"/>
			</then>
			<else>
				<fail message="Jibx binding [org.govmix.proxy.fatturapa] non riusciuto"/>
			</else>
		</if>
				
		<!-- creazione jar -->
		<jar jarfile="${dist_fatturaPA}/fatturaPA_api.jar">
			<zipfileset dir="${build_fatturaPA}" />
			<zipfileset dir="${src_dir_fatturaPA}/schemi/"/>
		</jar>

	</target>

	<target name="build" depends="build_fatturaPA"/>

</project>
