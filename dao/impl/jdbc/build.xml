<?xml version="1.0" encoding="iso-8859-1"?>

<project name="fatturaPA.dao.jdbc" default="build" basedir=".">

	<description>
        	Ambiente di compilazione del Progetto fatturaPA.dao.jdbc
	</description>
	
	<import file="local_env.xml" />
	<import file="${api_core_fatturaPA}/build.xml" />
	


	<!-- estensione di ant (if .... ) -->
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	<classpath>
			<pathelement location="${required_lib_fatturaPA}/ant-contrib-1.0b3.jar"/>
		</classpath>
	</taskdef>

	<!-- Check JAVA VERSIONE -->
    <property environment="env"/>
    <var name="java_home" value="${env.JAVA_HOME}"/>
    <!-- 
    <echo message="Java home: ${java_home}"/>
    <echo message="Java version: ${ant.java.version}"/>
    -->
    <if>
          <equals arg1="${java_home}" arg2="$${env.JAVA_HOME}"/>
          <then>
               <fail message="JAVA_HOME non impostata"/>
          </then>
    </if>
    <if>
         <or>
             <equals arg1="${ant.java.version}" arg2="1.3" />
             <equals arg1="${ant.java.version}" arg2="1.4" />
             <equals arg1="${ant.java.version}" arg2="1.5" />
         </or>
         <then>
              <fail message="OpenSPCoop2 richiede java 6 o superiore"/>
         </then>
    </if>
        
    
	<!--  
		Java 7 introduced a stricter verification and changed the class format a bit 
		to contain a stack map, used to verify that code is correct. 
		The exception can you see (java.lang.VerifyError: Expecting a stackmap frame at branch target XX in), 
		means that some method doesn't have a valid stack map.

		Java version or bytecode instrumentation could both be to blame. 
		Usually this means that a library that the application uses, generates invalid bytecode that doesn't pass the stricter verification. 
		So nothing else than reporting it as a bug to the library can be done by the developer.

		As a workaround you can add in java app
		-noverify, to disable verification, 
		or -XX:-UseSplitVerifier,to go back to the previous behavior, to the JVM arguments.
		
		Otherwise compile in 1.6 mode
	-->
	<var name="classSourceVersion" value="1.6"/>
	<var name="classTargetVersion" value="1.6"/>
	<if>
		<not>
			<equals arg1="${ant.java.version}" arg2="1.6" />
		</not>
		<then>
			<echo message="WARN: enable 1.6 compatibility (workaround for java 7 stricter verification)" />
		</then>
	</if>

	<property name="src_fatturaPA.dao.jdbc" location="src" />
	<property name="deploy_fatturaPA.dao.jdbc" location="deploy" />
	<property name="build_dir_fatturaPA.dao.jdbc" location="build" />
	<property name="build_fatturaPA.dao.jdbc" location="${build_dir_fatturaPA.dao.jdbc}/impl_jdbc" />
	<property name="dist_fatturaPA.dao.jdbc" location="dist" />
	
	<target name="clean">
		<delete dir="${build_dir_fatturaPA.dao.jdbc}" />
		<delete dir="${dist_fatturaPA.dao.jdbc}" />
	</target>

	<target name="init_compile_fatturaPA.dao.jdbc">
		<mkdir dir="${build_fatturaPA.dao.jdbc}" />
		<mkdir dir="${dist_fatturaPA.dao.jdbc}" />
	</target>


	<target name="build_fatturaPA.dao.jdbc" depends="init_compile_fatturaPA.dao.jdbc,build_fatturaPA" description="compila l'implementazione">

		<javac destdir="${build_fatturaPA.dao.jdbc}" 
				debug="${debug_jdbc_fatturaPA}"
				source="${classSourceVersion}" target="${classTargetVersion}">
			<compilerarg value="-Xlint:unchecked"/>
			<compilerarg value="-Xlint:deprecation"/>
			<src path="${src_fatturaPA.dao.jdbc}" />
			<classpath>
				<fileset dir="${required_lib_fatturaPA}" >
					<exclude name="**/jars_version.info"/>
				</fileset>
				<fileset dir="${dao_jdbc_lib_fatturaPA}"/>
				<fileset dir="${dist_fatturaPA.dao.jdbc}" />
				<fileset dir="${dist_dir_fatturaPA}" />
			</classpath>
		</javac>
		<copy todir="${build_fatturaPA.dao.jdbc}">
			<fileset dir="${src_fatturaPA.dao.jdbc}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>


		<!-- creazione jar -->
		<jar jarfile="${dist_fatturaPA.dao.jdbc}/fatturaPA_jdbc_impl.jar">
			<zipfileset dir="${build_fatturaPA.dao.jdbc}" />
			<zipfileset dir="${deploy_fatturaPA.dao.jdbc}/properties"/>
		</jar>

	</target>

	<target name="build" depends="build_fatturaPA.dao.jdbc"/>


	<target name="run_test" depends="build">
		<java classname="org.govmix.proxy.fatturapa.dao.jdbc.ClientTest" fork="true">
			<classpath>
				<fileset dir="${required_lib_fatturaPA}" >
					<exclude name="**/jars_version.info"/>
				</fileset>
				<fileset dir="${dao_jdbc_lib_fatturaPA}"/>
				<fileset dir="${dist_fatturaPA.dao.jdbc}" />
			</classpath>
		</java>
	</target>
	
</project>
